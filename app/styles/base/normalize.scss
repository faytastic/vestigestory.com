/**
 *  variante.io
 *  (c) VARIANTE <http://variante.io>
 *
 *  This software is released under the MIT License:
 *  http://www.opensource.org/licenses/mit-license.php
 */

$BASE_PATH: '../../' !default;

/**
 * Resets body margin and padding to remove default unexpected top/left margins.
 */
html,
body
{
    margin: 0px;
    padding: 0px;
}

/**
 * Defaults box-sizing of block elements to border-box to eliminate conflict between
 * width/height and paddings.
 */
article,
aside,
details,
dialog,
summary,
footer,
header,
main,
figcaption,
figure,
hgroup,
nav,
section,
div,
table,
tr,
td,
th,
tbody,
thead,
tfoot,
col,
form,
button,
.vs-box
{
    margin: 0px;
    padding: 0px;
    font-size: 0px;
    outline: none;
    border: none;
    box-sizing: border-box;
}

/**
 * Defaults potential block elements to be recognized as a block elemnt.
 */
article,
aside,
details,
dialog,
figcaption,
figure,
main,
summary,
footer,
header,
hgroup,
nav,
section,
img,
div
{
    vertical-align: top;
    display: block;
}

/**
 * Clearfix hack.
 */
.vs-clearfix
{
    *zoom: 1;

    &:before
    {
        content: '';
        display: table;
    }

    &:after
    {
        content: '';
        display: table;
        clear: both;
    }
}

/**
 *  Force disable transitions on an element.
 */
.vs-inanimate
{
    transition: none !important;
}

/**
 *  Force GPU acceleration on an animate element.
 */
.vs-animate
{
    transform: translateZ(0);
    transform: translate3d(0, 0, 0);
    transform-style: preserve-3d;
    backface-visibility: hidden;
    perspective: 1000;
}

/**
 *  Mask element.
 */
.vs-mask
{
    overflow: hidden;
}

/**
 *  Inline block element.
 */
.vs-fluid-block
{
    font-size: 0px;
    text-align: center;
    display: inline-block;

    &:before
    {
        width: 0px;
        height: 100%;
        vertical-align: middle;
        content: '';
        display: inline-block;
    }
}

/**
 *  Forces horizontal left align on an element. Position becomes absolute.
 */
.vs-alignh-left
{
    left: 0px;
    position: absolute;
}

/**
 *  Forces horizontal center align on an element. Position becomes absolute. This
 *  class requires the width to be a static value (i.e. must be defined and cannot
 *  be expressed as a percentage).
 */
.vs-alignh-center
{
    left: 0px;
    right: 0px;
    margin-left: auto;
    margin-right: auto;
    position: absolute;
}

/**
 *  Forces horizontal right align on an element. Position becomes absolute.
 */
.vs-alignh-right
{
    right: 0px;
    position: absolute;
}

/**
 *  Forces vertical top align on an element. Position becomes absolute.
 */
.vs-alignv-top
{
    top: 0px;
    position: absolute;
}

/**
 *  Forces vertical center align on an element. Position becomes absolute. This
 *  class requires the height to be a static value (i.e. must be defined and cannot
 *  be expressed as a percentage).
 */
.vs-alignv-center
{
    top: 0px;
    bottom: 0px;
    margin-top: auto;
    margin-bottom: auto;
    position: absolute;
}

/**
 *  Forces vertical bottom align on an element. Position becomes absolute.
 */
.vs-alignv-bottom
{
    bottom: 0px;
    position: absolute;
}

/**
 *  Applies inline vertical top align on an element.
 */
.vs-inline-alignv-top
{
    vertical-align: top;
    display: inline-block;
}

/**
 *  Applies inline vertical center align on an element.
 */
.vs-inline-alignv-center
{
    vertical-align: middle;
    display: inline-block;
}

/**
 *  Applies inline vertical bottom align on an element.
 */
.vs-inline-alignv-bottom
{
    vertical-align: bottom;
    display: inline-block;
}

/**
 *  Floats an element left.
 */
.vs-float-left
{
    float: left;
}

/**
 *  Floats an element right.
 */
.vs-float-right
{
    float: right;
}

/**
 *  Removes floating rules from an element.
 */
.vs-float-none
{
    float: none;
}

/**
 *  Marks an element as parallax enabled.
 */
.vs-parallax
{
    height: 100vh;
    perspective: 1px;
    overflow-x: hidden;
    overflow-y: auto;

    .vs-parallax-group
    {
        height: 100vh;
        position: relative;
        transform-style: preserve-3d;
    }

    .vs-parallax-layer
    {
        top: 0px;
        right: 0px;
        bottom: 0px;
        left: 0px;
        position: absolute;
    }

    .vs-parallax-layer-base
    {
        @extend .vs-parallax-layer;
        transform: translateZ(0px);
    }

    .vs-parallax-layer-background
    {
        @extend .vs-parallax-layer;
        transform: translateZ(-1px);
    }

    .vs-parallax-layer-foreground
    {
        @extend .vs-parallax-layer;
        transform: translateZ(1px);
    }
}

/**
 *  Resets typography rules on affected elements.
 */
ul,
ol,
li,
p,
h1,
h2,
h3,
h4,
h5,
h6,
a
button,
span
{
    margin: 0px;
    padding: 0px;
    font-weight: normal;
    text-decoration: none;
}

/**
 *  Resets rules on buttons.
 */
button
{
    line-height: 100%;

    &:hover
    {
        cursor: pointer;
    }

    &:disabled
    {
        cursor: default;
    }
}

